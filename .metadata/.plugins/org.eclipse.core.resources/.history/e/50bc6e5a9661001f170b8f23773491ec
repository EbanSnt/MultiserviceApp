package com.example.demo.models;

import java.sql.Date;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;
import jakarta.persistence.Transient;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.Size;

@Entity
@Table(name="users")
public class Users {

	@Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @NotEmpty(message="Se requiere nombre")
    @Size(min=2, message="El nombre debe ser mayor a 1 caracter")
    private String name;
    
    @NotEmpty(message="Se requiere apellido")
    @Size(min=2, message="El nombre debe ser mayor a 1 caracter")
    private String lastname;
    
    @NotEmpty(message="Se requiere Nombre de Usuario")
    @Size(min=2, message="El nombre debe ser mayor a 1 caracter")
    @Column(unique = true)
    private String username;
    
    @NotEmpty(message="Se requiere Email")
    @Column(unique = true)
    @Email(message="El Email debe ser valido")
    private String email;
    
    @NotEmpty(message="Se requiere contraseña")
    @Size(min=8, message="Contraseña debe ser mayor a 8 caracteres")
    private String password;
    
    @Transient
    private String confirm;

    @Column(updatable=false)
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date createdAt;
    
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date updatedAt;
    
	@PrePersist 
		protected void onCreate() {
			this.createdAt = new Date(); 
		}
		
		
	@PreUpdate //before update
		protected void onUpdate() {
			this.updatedAt = new Date(); 
		}
	
}

}
