package com.example.demo.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.example.demo.models.Communications;
import com.example.demo.models.Diagnosis;
import com.example.demo.models.ProductReceipt;
import com.example.demo.models.Users;
import com.example.demo.services.DiagnosisService;
import com.example.demo.services.ProductReceiptService;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;

@Controller
public class DiagnosisController {

	@Autowired
	private DiagnosisService diagnosisServ;
	
	@Autowired
	private ProductReceiptService productServ;
	
	@GetMapping("/diagnoses")
	public String diagnoses(Model model, HttpSession session) {
		List<Diagnosis> diagnoses = diagnosisServ.allDiagnosis();
		model.addAttribute("diagnoses",diagnoses);
		return "diagnoses.jsp";
	}
	
	
	@PostMapping("/createDiagnosis")
	public String newDiagnosis(@Valid @ModelAttribute("newDiagnosis") Diagnosis newDiagnosis,
			 BindingResult result,HttpSession session,Model model) {
		//Validación de que el usuario inició sesión
        Users userTemp = (Users) session.getAttribute("userInSession"); //Obj User o null
        if(userTemp == null) {
            return "redirect:/login";
        }
        if(result.hasErrors()) {
        	List <Diagnosis> diagnoses = diagnosisServ.allDiagnosis();
            model.addAttribute("diagnoses", diagnoses);
            return "communications.jsp";
        }else {
        	diagnosisServ.saveDiagnosis(newDiagnosis);
        	return "redirect:/";
        }
	}
	
	@GetMapping("/createDiagnosis")
	public String newDiagnosis(@Valid @ModelAttribute("newDiagnosis") Diagnosis newDiagnosis,HttpSession session,Model model) {
		//Validación de que el usuario inició sesión
        Users userTemp = (Users) session.getAttribute("userInSession"); //Obj User o null
        if(userTemp == null) {
            return "redirect:/login";
        }
        List<ProductReceipt> productReceipts = productServ.allProductReceipts();
        model.addAttribute("productReceipts",productReceipts);
        return "createDiagnosis.jsp";
	}
	
	@GetMapping("/diagnosis/{id}")
	public String communication(@PathVariable("id") Long id,@ModelAttribute("editDiagnoses") Communications editCustomer, Model model) {
		Communications communication = communicationServ.communication(id);
		model.addAttribute("communication",communication);
		return "customer.jsp";
	}
	
	@DeleteMapping("/deleteCommunication/{id}")
	public String deleteCustomer(@PathVariable("id") Long id,HttpSession session) {
        Users userTemp = (Users) session.getAttribute("userInSession"); //Obj User o null
        if(userTemp == null) {
            return "redirect:/";
        }
  
    	communicationServ.deleteCommunication(id);
    	return "redirect:/";
        
	}
}
